{"version":3,"sources":["components/Clock.jsx","App.js","index.js"],"names":["Clock","state","time","Date","toLocaleTimeString","heyWhatTimeIsIt","this","interval","setInterval","currentTime","setState","console","log","prevProps","props","name","clearInterval","React","Component","App","isClockVisible","clockName","visibleTrue","visibleFalse","rnd","Math","round","random","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAIaA,G,MAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,qBACjBC,gBAAiB,MAHrB,uDAUE,WAAqB,IAAD,OAClBC,KAAKC,SAAWC,aAAY,WAC1B,IAAMC,GAAc,IAAIN,MAAOC,qBAE/B,EAAKM,SAAS,CACZR,KAAMO,IAGRE,QAAQC,IAAIH,KACX,KAEHH,KAAKI,SAAS,CACZL,gBAAiBC,KAAKC,aAtB5B,gCA0BE,SAAmBM,GACbP,KAAKQ,MAAMC,OAASF,EAAUE,MAChCJ,QAAQC,IAAI,wCACLC,EAAUE,KADL,eACgBT,KAAKQ,MAAMC,SA7B7C,kCAiCE,WACE,IAAQV,EAAoBC,KAAKL,MAAzBI,gBAERW,cAAcX,KApClB,oBAuCE,WACE,OACE,oCACGC,KAAKL,MAAMC,UA1CpB,GAA2Be,IAAMC,YCqDlBC,E,4MAlDblB,MAAQ,CACNmB,gBAAgB,EAChBC,UAAW,K,EAGbC,YAAc,WACZ,EAAKZ,SAAS,CACZU,gBAAgB,K,EAIpBG,aAAe,WACb,EAAKb,SAAS,CACZU,gBAAgB,K,EAIpBI,IAAM,WACJ,EAAKd,SAAS,CACZW,UAAWI,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAI/B,WACE,MAAsCrB,KAAKL,MAAnCmB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,6BACE,2CACA,4BACG,iBACD,8BAAOD,GAAmB,kBAAC,EAAD,CAAOL,KAAMM,MAGzC,4BAAQO,KAAK,SAASC,QAASvB,KAAKgB,aAApC,cAIA,4BAAQM,KAAK,SAASC,QAASvB,KAAKiB,cAApC,cAIA,4BAAQK,KAAK,SAASC,QAASvB,KAAKkB,KAApC,wB,GA3CUP,IAAMC,WCFxBY,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.cb4c5de4.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    time: new Date().toLocaleTimeString(),\n    heyWhatTimeIsIt: null,\n  };\n\n  static propTypes = {\n    name: PropTypes.number.isRequired,\n  };\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      const currentTime = new Date().toLocaleTimeString();\n\n      this.setState({\n        time: currentTime,\n      });\n\n      console.log(currentTime);\n    }, 1000);\n\n    this.setState({\n      heyWhatTimeIsIt: this.interval,\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.name !== prevProps.name) {\n      console.log(`The Clock was renamed from `\n        + `${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    const { heyWhatTimeIsIt } = this.state;\n\n    clearInterval(heyWhatTimeIsIt);\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.time}\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nimport './App.scss';\n\nimport { Clock } from './components/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 666,\n  }\n\n  visibleTrue = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  }\n\n  visibleFalse = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  }\n\n  rnd = () => {\n    this.setState({\n      clockName: Math.round(Math.random() * 666),\n    });\n  }\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div>\n        <h1>React clock</h1>\n        <h2>\n          {'Current time: '}\n          <span>{isClockVisible && (<Clock name={clockName} />)}</span>\n        </h2>\n\n        <button type=\"button\" onClick={this.visibleTrue}>\n          Show Clock\n        </button>\n\n        <button type=\"button\" onClick={this.visibleFalse}>\n          Hide Clock\n        </button>\n\n        <button type=\"button\" onClick={this.rnd}>\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}